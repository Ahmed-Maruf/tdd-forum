<?php

namespace Tests\Unit;

use Illuminate\Database\Eloquent\Collection;
use Tests\TestCase;
use Illuminate\Foundation\Testing\DatabaseMigrations;
class ThreadTest extends TestCase
{
    use DatabaseMigrations;
    
    protected $thread;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->thread = factory('App\Thread')->create();
    }
    
    /**
     * A basic unit test example.
     *
     * @return void
     */
    public function testExample()
    {
        $this->assertTrue(true);
    }
    
    public function test_a_thread_have_replies(){
        $this->assertInstanceOf(Collection::class, $this->thread->replies);
    }
    
    public function test_a_thread_belongs_to_an_owner(){
        
        $this->assertInstanceOf('App\User', $this->thread->owner);
    }
    
    public function test_a_thread_can_add_a_reply(){
        
        $reply = factory('App\Reply')->make(['thread_id' => $this->thread->id]);
        $this->thread->addReply([
           'body' => $reply->body,
           'user_id' => $reply->user->id
        ]);
        
        $this->assertCount(1, $this->thread->replies);
    }
}
