<?php

namespace Tests\Unit;

use Illuminate\Database\Eloquent\Collection;
use Tests\TestCase;
use Illuminate\Foundation\Testing\DatabaseMigrations;
class ThreadTest extends TestCase
{
    use DatabaseMigrations;
    
    protected $thread;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->thread = create('App\Thread');
    }
    
    public function test_a_thread_belongs_to_an_owner(){
        
        $this->assertInstanceOf('App\User', $this->thread->owner);
    }
    
    public function test_a_thread_have_replies(){
        $this->assertInstanceOf(Collection::class, $this->thread->replies);
    }
    
    public function test_a_thread_can_add_a_reply(){
        
        $reply = factory('App\Reply')->make(['thread_id' => $this->thread->id]);
        $this->thread->addReply([
           'body' => $reply->body,
           'user_id' => $reply->user->id
        ]);
        
        $this->assertCount(1, $this->thread->replies);
    }
    
    public function test_a_thread_belongs_to_a_channel(){
        $this->assertInstanceOf('App\Channel', $this->thread->channel);
        
    }
    
    public function test_a_thread_can_make_a_string_path(){
        $this->assertEquals('/threads/' . $this->thread->channel->slug . '/' . $this->thread->id, $this->thread->path());
    }
}
